01 某开发团队，开发一款app MOO 命名1.0版本，发布到appStore + 备份
02 因市场反馈良好，因此该团队决定开发2.0版本
03 开发团队开发2.0版本
04当2.0版本开发到中途的时候，这个时候市场人员反馈已经上架的1.0版本中存在重大bug，需要马上修复
05开发人员会指派固定人员去修复1.0版本中存在的bug，并且尽快上架完成替换
06指派的人员，应该根据之前的备份的1.0版本来创建一个分支，在分支中修复bug
07当分支中bug修复完成了之后，把该版本命名为1.1版本，发布到appstore + 备份
08在主干上合并分支，解决当前正在开发的2.0版本中存在的同样的bug
09删除分支，继续开发2.0本

svn服务器创建app项目的仓库，假设是Product 则在该文件夹下有三个子文件夹 （branches&tags&trunk）branche 代表分支 tags 代表备份 trunk代表主干

怎样本分项目呢 点到主干中的 项目 点击svn 图形界面的
Tag:备份 {
01Tag as 输入备份的名称
02Where 保存到哪里
03Revision 版本选择到发布到appStore的版本(MOO1.0)
}

Branch:分支{ （当开发到1.0版本的时候，反馈线上1.0有bug，指派一个人去在tags里面找到之前上传的appStore1.0版本去拉去一个分支）
01Branch as （分支的名字MOO1.0fixbug ）
02Where 在哪一个文件夹下
03Revision 版本
}

在分支中修复好bug后备份：{
01创建好分支后就去找人去修复bug
02Tag：备份1.1版本
}

Merge:合并分支 {
在主干中的bug也是存在的所以要去主干去合并分支
01 merge from（ 合并分支来自哪里的）
02 删除分支

}







