1、svn checkout 仓库路径 --username=用户名 --password=密码
2、检查仓库中文件状态 svn status(st)
3、将本地的代码提交到远程仓库svn commit -m "注释" 具体的文件名(可以省略 )
4、查看版本信息 svn update , svn log
5、冲突(原因|解决tc-mc-p)
解决冲突01使用tc
// tc: 表示使用服务端的数据内容来覆盖掉我本地的数据内容
解决冲突02使用mc
// mc: 以我的为准，用本地的数据内容覆盖掉服务器端的，版本号会做+1操作
// 还需要做一次提交操作 svn commit - m "解决了冲突以mc的方式" Dog.h
解决冲突03使用postpone（resolved）
// p 手动的解决冲突
(1)打开有冲突的文件，把冲突解决(删除特殊字符)
(2)通过命令行告诉svn已经手动的把冲突解决了 svn resolved Dog.h
(3)把更改提交到远程的仓库 svn comiit -m "解决冲突使用p的方式"
6、版本回退：
版本回退的两种情况:
01 本地的代码做了修改,该修改还没有提交到远程仓库,取消更改 
 svn revert Dog. h
02 本地的代码做了修改,该修改已经被提交到远程仓库,回退到上ー个版本 
[1]回到指定的版本 svn update-r版本号 
 svn update -r14
 svn commit-m"Dog文件回退到上一个版本"Dog,h	//直接提交没有反应(不能使用这种方式版本回退) 
[2]版本回退
	(1)先更新获得最新的版本 svn update
	(2)用指定版本的内容来覆盖当前版本的内容 svn merge -r15:r14 Dog.h  //表示使用第14个版本的Dog.h文件内容来覆盖第15版本的内容
	(3)还需要把更改提交到远程仓库 svn commit -m "Dog文件回退到上一个版本"



图形化界面工具连接上SVN服务器
01. 连接到远程仓库
02. 把远程的仓库中的代码下载到本地checkout

使用图形界面工具来进行项目初始化配置
01.使用Xcode创建一个空的项目放到本地的仓库中，新创建的项目，默认会自动做一次add添加操作。
02.使用图形界面工具提交代码到远程的服务器，选择commit按钮之后会弹框提示：检测到有需要忽略的文件，应该如何处理?
03.选择ignore,添加注释，点击右下角的commit changes
04.继续处理忽略操作

设置仓库的忽略文件
01哪些文件是需要忽略的,user-data 保存断点信息/目录的展开情况
02首先先把需要忽略的文件userdata删除，点开图形化工具找到项目中的xcuserdata直接删掉，
还有一个点开project.xcworkspace下的xcuserdata删掉。commit 提交更改到服务器(需要写注释，commit changes)
03要重写生成这两个文件(使用xcode把项目打开，在项目中随便添加一个断点信息，随便修改一行代码)
04打开svn图形管理工具会重新看到这两个文件，
	需要手动忽略这两个文件
方式一：直接提价commit 提交，在提交的时候选择ignore，
凡是二：分别设置两个文件都忽略然后提交(右击要忽略的文件，选择忽略)
05完成忽略操作之后，提交(commit)会报错(有冲突)
06先更新，在提交
07忽略操作是否完成(使用Xcode打开项目，修改某个文件，选择source control-commit)，如果只有一个文件是被更改的，需要提交那么就说明忽略操作已经成功了


svn 注意事项 xcode中使用静态库注意点(应该手动的把.a文件添加到SVN管理中，默认是被忽略的 svn add libRegex.a(添加静态库)) 




SVN:{
status - st
commit -ci
checkout - ci
update - up
remove -rm
}





	

